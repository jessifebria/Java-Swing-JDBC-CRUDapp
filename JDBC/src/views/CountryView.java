/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountryController;
import controllers.RegionController;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Country;
import models.Region;

/**
 *
 * @author JESSI
 */
public class CountryView extends javax.swing.JInternalFrame {

    private final CountryController con;
    private final RegionController rcon;

    MainView view = new MainView();

    /**
     * Creates new form RegionView
     */
    public CountryView() {
        initComponents();
        con = new CountryController();
        rcon = new RegionController();
        load(con.binding());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRegion = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        btnSave2 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtrid = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtsearchid = new javax.swing.JTextField();
        btnsearchid = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        btnsearchrid = new javax.swing.JButton();
        txtsearchrid = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setTitle("Form Country");

        tblRegion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblRegion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRegionMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblRegion);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Country"));

        jLabel1.setText("Country ID");

        jLabel2.setText("Name");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        btnSave2.setText("Insert");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        btnback.setText("Back to HOME");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        jLabel3.setText("Region ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnback))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Update)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(21, 21, 21)
                        .addComponent(btnSave2)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtrid, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(Update)
                    .addComponent(btnSave2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(btnback))
        );

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Search ALL");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtsearchid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchidActionPerformed(evt);
            }
        });

        btnsearchid.setText("Search Country ID");
        btnsearchid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchidActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        btnsearchrid.setText("Search Region ID");
        btnsearchrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchridActionPerformed(evt);
            }
        });

        txtsearchrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchridActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(refresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(txtsearchid)
                    .addComponent(txtsearchrid, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsearchrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnsearchid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsearchid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refresh))
                    .addComponent(btnsearchid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnsearchrid)
                    .addComponent(txtsearchrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //save atau insert
    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        String id = txtId.getText();
        String name = txtName.getText();
        String rid = txtrid.getText();
        if (id.equalsIgnoreCase("") || name.equalsIgnoreCase("") || rid.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Tidak boleh ada data yang kosong!");
        } else if ((checkint(id) == true) || (checkint(rid) == false)) {
            String pesan = "Error Input!";
            if (checkint(id) == true) {
                pesan += "\nMohon masukkan Country ID dengan String";
            }
            if (checkint(rid) == false) {
                pesan += "\nMohon masukkan Region ID dengan angka integer";
            }
            JOptionPane.showMessageDialog(this, pesan);
            txtId.setText("");
            txtName.setText("");
            txtrid.setText("");

        } else if ((checkid(id) == true) || (checkrid(rid) == false) || (checkname(name) == true)) {
            String pesan = "Terjadi Kesalahan!";
            if (checkid(id) == true) {
                pesan += "\nCountry ID sudah ada di database";
            }
            if (checkname(name) == true) {
                pesan += "\nData dengan nama yang sama sudah ada di database";
            }
            if (checkrid(rid) == false) {
                pesan += "\nRegion ID tidak ditemukan di database";
            }
            JOptionPane.showMessageDialog(this, pesan + "\nMohon input data lagi");
        } else if ((checkint(id) == false) && (checkint(rid) == true)) {
            String message = "Anda yakin ingin insert data ID : " + id + " , Nama : " + name + " , Region ID : " + rid + " ?";
            int dialogResult = JOptionPane.showConfirmDialog(this, message, "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, con.insert(id, name, rid), "Pemberitahuan", JOptionPane.ERROR_MESSAGE);
                load(con.binding());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan!");
        }

    }//GEN-LAST:event_btnSave2ActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    //delete
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = txtId.getText();
        if (id.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Data Country ID tidak boleh kosong! Hapus data hanya bisa menggunakan ID! \nSilahkan search dahulu untuk menemukan ID");
        } else if (checkint(id) == true) {
            JOptionPane.showMessageDialog(this, "Mohon masukkan id dengan String");
            txtId.setText("");
            txtName.setText("");
            txtrid.setText("");
        } else if (checkid(id) == false) {
            JOptionPane.showMessageDialog(this, "Country ID tidak ditemukan!\nMohon masukkan ID sesuai dengan Database");
        } else if (checkint(id) == false) {
            String message = "Anda yakin ingin menghapus data dengan Country ID " + id + " ?";
            int dialogResult = JOptionPane.showConfirmDialog(this, message, "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, con.delete(id), "Pemberitahuan", JOptionPane.ERROR_MESSAGE);
                load(con.binding());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    //update
    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        String id = txtId.getText();
        String name = txtName.getText();
        String rid = txtrid.getText();
        if (id.equalsIgnoreCase("") || name.equalsIgnoreCase("") || rid.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Tidak boleh ada data yang kosong!");
        } else if ((checkint(id) == true) || (checkint(rid) == false)) {
            String pesan = "Error Input!";
            if (checkint(id) == true) {
                pesan += "\nMohon masukkan Country ID dengan String";
            }
            if (checkint(rid) == false) {
                pesan += "\nMohon masukkan Region ID dengan angka integer";
            }
            JOptionPane.showMessageDialog(this, pesan);
            txtId.setText("");
            txtName.setText("");
            txtrid.setText("");
        } else if ((checkid(id) == false) || (checkrid(rid) == false) || (checkname(name) == true)) {
            String pesan = "Terjadi Kesalahan!";
            if (checkid(id) == false) {
                pesan += "\nCountry ID tidak ada di database";
            }
            if (checkname(name) == true) {
                pesan += "\nData dengan nama yang sama sudah ada di database";
            }
            if (checkrid(rid) == false) {
                pesan += "\nRegion ID tidak ditemukan di database";
            }
            JOptionPane.showMessageDialog(this, pesan + "\nMohon input data lagi");
        } else if ((checkint(id) == false) && (checkint(rid) == true)) {
            String message = "Anda yakin ingin update data ID : " + id + " , Nama : " + name + " , Region ID : " + rid + " ?";
            int dialogResult = JOptionPane.showConfirmDialog(this, message, "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, con.update(id, name, rid), "Pemberitahuan", JOptionPane.ERROR_MESSAGE);
                load(con.binding());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan!");
        }
    }//GEN-LAST:event_UpdateActionPerformed

    //search all
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        load(con.search(txtSearch.getText()));
    }//GEN-LAST:event_btnSearchActionPerformed

    //mouse event table
    private void tblRegionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRegionMouseClicked
        int row = tblRegion.getSelectedRow();
        txtId.setText(tblRegion.getValueAt(row, 0).toString());
        txtName.setText(tblRegion.getValueAt(row, 1).toString());
        txtrid.setText(tblRegion.getValueAt(row, 2).toString());
    }//GEN-LAST:event_tblRegionMouseClicked

    private void txtsearchidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchidActionPerformed

    //search by id
    private void btnsearchidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchidActionPerformed
        load(con.getbyid(txtsearchid.getText()));
    }//GEN-LAST:event_btnsearchidActionPerformed
    //refresh dgn mengosongkan semua field
    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        load(con.binding());
        txtId.setText("");
        txtName.setText("");
        txtrid.setText("");
        txtSearch.setText("");
        txtsearchid.setText("");
        txtsearchrid.setText("");
    }//GEN-LAST:event_refreshActionPerformed

    //back to home
    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed

        this.setVisible(false);
        MainView view = new MainView();

    }//GEN-LAST:event_btnbackActionPerformed

    private void txtsearchridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchridActionPerformed

    private void btnsearchridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchridActionPerformed
        if (checkint(txtsearchrid.getText())) {
            load(con.getbyregion(txtsearchrid.getText()));
        } else {
            load(con.search("ayefgaweuweuqwneryqwqwyetrbqwyrcuwyq"));
        }
    }//GEN-LAST:event_btnsearchridActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnsearchid;
    private javax.swing.JButton btnsearchrid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton refresh;
    private javax.swing.JTable tblRegion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtrid;
    private javax.swing.JTextField txtsearchid;
    private javax.swing.JTextField txtsearchrid;
    // End of variables declaration//GEN-END:variables

    //load data table
    private void load(List<Country> countrys) {
        String header[] = {"COUNTRY ID", "COUNTRY NAME", "REGION ID", "REGION NAME"};
        String[][] data = new String[countrys.size()][4];
        for (int i = 0; i < data.length; i++) {
            data[i][0] = countrys.get(i).getId();
            data[i][1] = countrys.get(i).getName();
            data[i][2] = String.valueOf(countrys.get(i).getRegion());
            data[i][3] = countrys.get(i).getRname();
        }
        DefaultTableModel defaultTableModel = new DefaultTableModel(data, header);
        tblRegion.setModel(defaultTableModel);
    }

    //check apakah suatu string merupakan integer
    private static boolean checkint(String angka) {
        if (Pattern.matches(("[+-]?[0-9]+"), angka)) {
            return true;
        } else {
            return false;
        }
    }

    //check apakah ada id yang sama di database
    private boolean checkid(String id) {
        List<Country> couns = con.binding();
        int p = 0;
        for (int i = 0; i < couns.size(); i++) {
            // cek id tsb ada atau tidak di database (jika ada counter ke p=1 artinya ada)
            if ((id.toLowerCase().equalsIgnoreCase(couns.get(i).getId().toLowerCase()))) {
                p = 1;
            }
        }

        if (p == 1) {
            return true;
        } else {
            return false;
        }

    }

    //check apakah ada nama yang sama di database
    private boolean checkname(String name) {
        List<Country> couns = con.binding();
        int p = 0;
        for (int i = 0; i < couns.size(); i++) {
            // cek nama tsb ada atau tidak di database (jika ada counter ke p=1 artinya ada)
            if ((name.toLowerCase().equalsIgnoreCase(couns.get(i).getId().toLowerCase()))) {
                p = 1;
            }
        }
        if (p == 1) {
            return true;
        } else {
            return false;
        }
    }

    private boolean checkrid(String rid) {
        List<Region> regions = rcon.binding();
        int p = 0;
        for (int i = 0; i < regions.size(); i++) {
            // cek id tsb ada atau tidak di database (jika ada counter ke p=1 artinya ada)
            if (rid.equalsIgnoreCase(String.valueOf(regions.get(i).getId()))) {
                p = 1;
            }
        }

        if (p == 1) {
            return true;
        } else {
            return false;
        }

    }

}
